apiVersion: apps/v1
kind: Deployment
metadata: { name: user-service, namespace: msa, labels: { app: user-service } }
spec:
  replicas: 1
  selector: { matchLabels: { app: user-service } }
  template:
    metadata: { labels: { app: user-service } }
    spec:
      containers:
        - name: user-service
          image: your-dockerhub-username/user-service:0.0.1
          ports: [{ containerPort: 8081, name: http }]
          env:
            - name: DB_HOST
              valueFrom: { configMapKeyRef: { name: user-service-config, key: DB_HOST } }
            - name: DB_PORT
              valueFrom: { configMapKeyRef: { name: user-service-config, key: DB_PORT } }
            - name: DB_NAME
              valueFrom: { configMapKeyRef: { name: user-service-config, key: DB_NAME } }
            - name: DB_USER
              valueFrom: { secretKeyRef: { name: userdb-secret, key: POSTGRES_USER } }
            - name: DB_PASSWORD
              valueFrom: { secretKeyRef: { name: userdb-secret, key: POSTGRES_PASSWORD } }
          readinessProbe:
            httpGet: { path: /actuator/health/readiness, port: http }
            initialDelaySeconds: 10
          livenessProbe:
            httpGet: { path: /actuator/health/liveness, port: http }
            initialDelaySeconds: 20
---
apiVersion: v1
kind: Service
metadata: { name: user-service, namespace: msa }
spec:
  selector: { app: user-service }
  ports:
    - name: http
      port: 80
      targetPort: 8081
